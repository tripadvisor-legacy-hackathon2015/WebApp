{
  "name": "configstore",
  "version": "1.3.0",
  "description": "Easily load and save config without having to think about where and how",
  "keywords": [
    "conf",
    "config",
    "configuration",
    "settings",
    "store",
    "editable",
    "json",
    "data",
    "persist",
    "persistent",
    "save"
  ],
  "author": {
    "name": "Sindre Sorhus",
    "email": "sindresorhus@gmail.com",
    "url": "sindresorhus.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/yeoman/configstore"
  },
  "scripts": {
    "test": "xo && mocha"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "license": "BSD-2-Clause",
  "dependencies": {
    "graceful-fs": "^4.1.2",
    "mkdirp": "^0.5.0",
    "object-assign": "^4.0.1",
    "os-tmpdir": "^1.0.0",
    "osenv": "^0.1.0",
    "uuid": "^2.0.1",
    "write-file-atomic": "^1.1.2",
    "xdg-basedir": "^2.0.0"
  },
  "devDependencies": {
    "mocha": "*",
    "path-exists": "^2.0.0",
    "xo": "*"
  },
  "files": [
    "index.js"
  ],
  "readme": "# configstore [![Build Status](https://secure.travis-ci.org/yeoman/configstore.svg?branch=master)](http://travis-ci.org/yeoman/configstore)\n\n> Easily load and persist config without having to think about where and how\n\nConfig is stored in a JSON file located in `$XDG_CONFIG_HOME` or `~/.config`.  \nExample: `~/.config/configstore/some-id.json`\n\n\n## Usage\n\n```js\nconst Configstore = require('configstore');\nconst pkg = require('./package.json');\n\n// Init a Configstore instance with an unique ID e.g.\n// package name and optionally some default values\nconst conf = new Configstore(pkg.name, {foo: 'bar'});\n\nconf.set('awesome', true);\n\nconsole.log(conf.get('awesome'));\n//=> true\n\nconsole.log(conf.get('foo'));\n//=> bar\n\nconf.del('awesome');\n\nconsole.log(conf.get('awesome'));\n//=> undefined\n```\n\n\n## API\n\n### Configstore(packageName, [defaults], [options])\n\nCreate a new Configstore instance `config`.\n\n#### packageName\n\nType: `string`\n\nName of your package.\n\n#### defaults\n\nType: `object`\n\nDefault content to init the config store with.\n\n#### options\n\nType: `object`\n\n##### globalConfigPath\n\nType: `boolean`  \nDefault: `false`\n\nStore the config at `$CONFIG/package-name/config.json` instead of the default `$CONFIG/configstore/package-name.json`. This is not recommended as you might end up conflicting with other tools, rendering the \"without having to think\" idea moot.\n\n### config.set(key, value)\n\nSet an item.\n\n### config.get(key)\n\nGet an item.\n\n### config.del(key)\n\nDelete an item.\n\n### config.clear()\n\nDelete all items.\n\n### config.all\n\nGet all items as an object or replace the current config with an object:\n\n```js\nconf.all = {\n\thello: 'world'\n};\n```\n\n### config.size\n\nGet the item count.\n\n### config.path\n\nGet the path to the config file. Can be used to show the user where the config file is located or even better open it for them.\n\n\n## License\n\n[BSD license](http://opensource.org/licenses/bsd-license.php)  \nCopyright Google\n",
  "readmeFilename": "readme.md",
  "bugs": {
    "url": "https://github.com/yeoman/configstore/issues"
  },
  "_id": "configstore@1.3.0",
  "dist": {
    "shasum": "cb8ba91856876703fc1e681b7f24e094d78ab96b"
  },
  "_from": "configstore@^1.0.0",
  "_resolved": "https://registry.npmjs.org/configstore/-/configstore-1.3.0.tgz"
}
